setwd("C:/Users/XHY/Desktop/Source_Code/sta3010/hw8")
# data
library(readxl)
data <- read_xls("data-table-B2.XLS")
View(data)
reg<-lm(y~x1+X2+x3+X4+x5)
summary(reg)
print(influence.measures(reg))
# data
library(readxl)
data <- read_xls("data-table-B2.XLS")
x1 <- data$x1
x2 <- data$x2
x3 <- data$x3
x4 <- data$x4
x5 <- data$x5
y <- data$y
# Q1
reg<-lm(y~x1+X2+x3+X4+x5)
summary(reg)
print(influence.measures(reg))
# Q1
reg<-lm(y~x1+x2+x3+X4+x5)
# Q1
reg<-lm(y~x1+x2+x3+x4+x5)
summary(reg)
print(influence.measures(reg))
print(influence.measures(reg))
x0 <- matrix(rep(1, 29), ncol = 1)
X <- cbind(x0, matrix(x1), matrix(x2), matrix(x3), matrix(x4), matrix(x5))
H <- X %*% solve(t(X) %*% X) %*% t(X)
View(H)
diag(H)
# data
library(readxl)
data <- read_xls("data-Q1.XLS")
y<-data$cost
# data
library(readxl)
data <- read_xls("data-Q1.XLS")
x <- data$x
y <- data$cost
# Q2
plot(x,y)
# Q2
plot(x,y,main="Scatter plot of X and Y")
View(data)
reg<-lm(y~x)
summary(reg)
p<-seq(0,100,0.1)
f<-predict(reg,newdata=data.frame(p))
f<-predict(reg,p)
f<-predict(reg,as.data.frame(p))
p<-seq(0,100,0.1)
f<-predict(reg,data.frame(x=p))
lines(p,f,col="blue")
install.packages("MASS")
library(MASS)
d<-cooks.distance(reg)
d
print(influence.measures(reg))
xc<-x[-c(1,2,14)]
xc
yc<-y[-c(1,2,14)]
d<-cooks.distance(reg)
xc<-x[-c(1,2,14)]
yc<-y[-c(1,2,14)]
reg2<-lm(xc,yc)
summary(reg2)
p<-seq(0,100,0.1)
f1<-predict(reg2,data.frame(x=p))
plot(xc,yc,main = "Scatter plot of X and Y (Deleted)")
lines(p,f2,col="blue")
d<-cooks.distance(reg)
xc<-x[-c(1,2,14)]
yc<-y[-c(1,2,14)]
reg2<-lm(xc,yc)
summary(reg2)
p<-seq(0,100,0.1)
f2<-predict(reg2,data.frame(x=p))
plot(xc,yc,main = "Scatter plot of X and Y (Deleted)")
lines(p,f2,col="blue")
d<-cooks.distance(reg)
xc<-x[-c(1,2,14)]
yc<-y[-c(1,2,14)]
reg2<-lm(yc~xc)
summary(reg2)
p<-seq(0,100,0.1)
f2<-predict(reg2,data.frame(x=p))
plot(xc,yc,main = "Scatter plot of X and Y (Deleted)")
lines(p,f2,col="blue")
d<-cooks.distance(reg)
xc<-x[-c(1,2,14)]
yc<-y[-c(1,2,14)]
reg2<-lm(yc~xc)
summary(reg2)
p<-seq(0,100,0.1)
f2<-predict(reg2,data.frame(xc=p))
plot(xc,yc,main = "Scatter plot of X and Y (Deleted)")
lines(p,f2,col="blue")
# data
library(readxl)
library(MASS)
data <- read_xls("data-Q1.XLS")
x <- data$x
y <- data$cost
# Q2
plot(x, y, main = "Scatter plot of X and Y")
reg1 <- lm(y ~ x)
summary(reg1)
p <- seq(0, 100, 0.1)
f1 <- predict(reg1, data.frame(x = p))
lines(p, f1, col = "blue")
d <- cooks.distance(reg)
xc <- x[-c(1, 2, 14)]
yc <- y[-c(1, 2, 14)]
reg2 <- lm(yc ~ xc)
summary(reg2)
p <- seq(0, 100, 0.1)
f2 <- predict(reg2, data.frame(xc = p))
plot(xc, yc, main = "Scatter plot of X and Y (Deleted)")
lines(p, f2, col = "blue")
reg3<-rlm(y~x)
reg3<-rlm(y~x,psi=psi.huber)
summary(reg3)
reg3<-rlm(y~x,psi=psi.huber)
summary(reg3)
p <- seq(0, 100, 0.1)
f2 <- predict(reg3, data.frame(x = p))
plot(x, y, main = "Scatter plot of X and Y (Huber's)")
reg3<-rlm(y~x,psi=psi.huber)
summary(reg3)
p <- seq(0, 100, 0.1)
f3 <- predict(reg3, data.frame(x = p))
plot(x, y, main = "Scatter plot of X and Y (Huber's)")
lines(p,f3,col="blue")
reg4<-rlm(y~x,psi=psi.hampel)
summary(reg4)
reg4<-rlm(y~x,psi=psi.hampel)
summary(reg4)
p <- seq(0, 100, 0.1)
f4 <- predict(reg4, data.frame(x = p))
plot(x, y, main = "Scatter plot of X and Y (Hampel's)")
lines(p,f4,col="blue")
xt<-seq(-5,5,0.1)
yt<-xt*(1-(xt/5)^2)^2
plot(xt,yt,type="l",main ="Tukey's Biwelght")
plot(xt,yt,type="l",xlim=c(-10,10),main ="Tukey's Biwelght")
lines(xt,yt)
lines(xt,yt,col="blue")
xt <- seq(-5, 5, 0.1)
yt <- xt * (1 - (xt / 5) ^ 2) ^ 2
plot(
xt,
yt,
col = "red",
type = "l",
xlim = c(-10, 10),
main = "Tukey's Biwelght"
)
xt <- c(-10, -5, 0.1)
yt <- 0 * xt
lines(xt, yt, col = "blue")
xt <- c(5, 10, 0.1)
yt <- 0 * xt
lines(xt, yt, col = "blue")
# Q3
xt <- seq(-5, 5, 0.1)
yt <- xt * (1 - (xt / 5) ^ 2) ^ 2
plot(
xt,
yt,
col = "red",
type = "l",
xlim = c(-10, 10),
main = "Tukey's Biwelght"
)
xt <- c(-10, -5, 0.1)
yt <- 0 * xt
lines(xt, yt, col = "blue")
lines(c(-10,-5),c(0,0) col = "blue")
lines(c(-10,-5),c(0,0), col = "blue")
# Q3
xt <- seq(-5, 5, 0.1)
yt <- xt * (1 - (xt / 5) ^ 2) ^ 2
plot(
xt,
yt,
col = "red",
type = "l",
xlim = c(-10, 10),
main = "Tukey's Biwelght"
)
lines(c(-10,-5),c(0,0), col = "blue")
lines(c(5,10),c(0,0))
# Q3
xt <- seq(-5, 5, 0.1)
yt <- xt * (1 - (xt / 5) ^ 2) ^ 2
plot(
xt,
yt,
type = "l",
xlim = c(-10, 10),
main = "Tukey's Biwelght"
)
lines(c(-10,-5),c(0,0))
lines(c(5,10),c(0,0))
# Huber's
xh<-seq(-2,2,0.1)
yh<-xh
plot(
xh,
yh,
type = "l",
xlim = c(-4,4),
main = "Huber's Function"
)
# Huber's
xh<-seq(-2,2,0.1)
yh<-xh
plot(
xh,
yh,
type = "l",
xlim = c(-4,4),
ylim=c(-4,4),
main = "Huber's Function"
)
# Huber's
xh<-seq(-2,2,0.1)
yh<-xh
plot(
xh,
yh,
type = "l",
xlim = c(-4,4),
ylim=c(-4,4),
main = "Huber's Function"
)
lines(c(2,4),c(2,2))
lines(c(-4,-2),c(-2,-2))
a*pi
# Andrew's
a<-1.339
a*pi
# Andrew's
a <- 1.339
xa <- seq(-a * pi, a * pi)
ya <- sin(xa)
plot(
xa,
ya,
type = "l",
xlim = c(-8, 8),
ylim = c(-4, 4),
main = "Andrew's Wave"
)
# Andrew's
a <- 1.339
xa <- seq(-a * pi, a * pi)
ya <- sin(xa/a)
plot(
xa,
ya,
type = "l",
xlim = c(-8, 8),
ylim = c(-4, 4),
main = "Andrew's Wave"
)
# Andrew's
a <- 1.339
xa <- seq(-a * pi, a * pi)
ya <- sin(xa/a)
plot(
xa,
ya,
type = "l",
xlim = c(-8, 8),
ylim = c(-2, 2),
main = "Andrew's Wave"
)
# Andrew's
a <- 1.339
xa <- seq(-a * pi, a * pi,0.1)
ya <- sin(xa/a)
plot(
xa,
ya,
type = "l",
xlim = c(-8, 8),
ylim = c(-2, 2),
main = "Andrew's Wave"
)
lines(c(a * pi, 8), c(0,0))
lines(c( -8,-a * pi), c(0,0))
# Q3
# Tukey's
xt <- seq(-5, 5, 0.1)
yt <- xt * (1 - (xt / 5) ^ 2) ^ 2
plot(xt,
yt,
type = "l",
xlim = c(-10, 10),
main = "Tukey's Biwelght")
lines(c(5, 10), c(0, 0))
lines(c(-10,-5), c(0, 0))
# Huber's
xh <- seq(-2, 2, 0.1)
yh <- xh
plot(
xh,
yh,
type = "l",
xlim = c(-4, 4),
ylim = c(-4, 4),
main = "Huber's Function"
)
lines(c(2, 4), c(2, 2))
lines(c(-4,-2), c(-2,-2))
# Andrew's
a <- 1.339
xa <- seq(-a * pi, a * pi, 0.1)
ya <- sin(xa / a)
plot(
xa,
ya,
type = "l",
xlim = c(-8, 8),
ylim = c(-2, 2),
main = "Andrew's Wave"
)
lines(c(a * pi, 8), c(0, 0))
lines(c(-8,-a * pi), c(0, 0))
a<-count(r[r<0.05])
# Q4
n <- 500
r <- runif(n, 0, 1)
a <- length(r[r < 0.05]) / 500
xc <- rnorm(n * a, 0, 1)
xd <- rnorm(n * (1 - a), 0, 10)
# Q4
n <- 500
r <- runif(n, 0, 1)
a <- length(r[r < 0.05]) / 500
xc <- rnorm(n * a, 0, 1)
xd <- rnorm(n * (1 - a), 0, 10)
x<-c(xc,xd)
hist(x)
# Q4
par(mfrow=c(1,2))
hist(x,main="Histogram of Contaminated Gaussian")
hist(x,main="Contaminated Gaussian")
hist(x,main="Contaminated Gaussian")
hist(rnorm(n,0,1))
# Q4
par(mfrow = c(1, 2))
n <- 500
r <- runif(n, 0, 1)
a <- length(r[r < 0.05]) / 500
xc <- rnorm(n * a, 0, 1)
xd <- rnorm(n * (1 - a), 0, 10)
x <- c(xc, xd)
hist(x, main = "Contaminated Gaussian")
hist(rnorm(n, 0, 1), main = "Gaussian")
n <- 1000
r <- runif(n, 0, 1)
a <- length(r[r < 0.05]) / n
xc <- rnorm(n * a, 0, 1)
xd <- rnorm(n * (1 - a), 0, 10)
x <- c(xc, xd)
hist(x, main = "Contaminated Gaussian")
hist(rnorm(n, 0, 1), main = "Gaussian")
n <- 2000
r <- runif(n, 0, 1)
a <- length(r[r < 0.05]) / n
xc <- rnorm(n * a, 0, 1)
xd <- rnorm(n * (1 - a), 0, 10)
x <- c(xc, xd)
hist(x, main = "Contaminated Gaussian")
hist(rnorm(n, 0, 1), main = "Gaussian")
# Q4
par(mfrow = c(1, 2))
n <- 500
r <- runif(n, 0, 1)
a <- length(r[r < 0.05]) / n
xc <- rnorm(n * a, 0, 1)
xd <- rnorm(n * (1 - a), 0, 10)
x <- c(xc, xd)
hist(x, main = "Contaminated Gaussian")
hist(rnorm(n, 0, 1), main = "Gaussian")
n <- 1000
r <- runif(n, 0, 1)
a <- length(r[r < 0.05]) / n
xc <- rnorm(n * a, 0, 1)
xd <- rnorm(n * (1 - a), 0, 10)
x <- c(xc, xd)
hist(x, main = "Contaminated Gaussian")
hist(rnorm(n, 0, 1), main = "Gaussian")
n <- 2000
r <- runif(n, 0, 1)
a <- length(r[r < 0.05]) / n
xc <- rnorm(n * a, 0, 1)
xd <- rnorm(n * (1 - a), 0, 10)
x <- c(xc, xd)
hist(x, main = "Contaminated Gaussian")
hist(rnorm(n, 0, 1), main = "Gaussian")
